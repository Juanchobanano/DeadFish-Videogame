<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>facebook_init();                                    // Initialise Facebook
global.Auth = false;                                // Control variable
global.AskedForLogin = false;                       // Login control for HTML5

permissions = ds_list_create();                     // A ds_list to hold all possible permissions. MUST be used, even if no permissions are to be sent
ds_list_add(permissions,"public_profile");          // Add the permissions to the list. If no permissions are necessary this is not necessary
alarm[0] = 1;                                       // Set an alarm to check the login status
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
ds_list_destroy(permissions);       // Remove the ds_list from memory




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check the Facebook status and set a global variable
var fbStatus;
fbStatus = facebook_status();                                       // Get the Facebook status
show_debug_message( "facebook status: " + fbStatus );
switch (fbStatus)                                          
{
case "AUTHORISED":                                                  //Facebook authorised!
    show_message('Successs');
    global.Auth = true; 
    instance_destroy(); 
    break;   
case "IDLE":                                                        //facebook initialised - ready to login  
    facebook_login(permissions, fb_login_default); 
    global.AskedForLogin=true;
    alarm[0] = 30; 
    break;   
case "FAILED":                                                      //Failure in the connection, so try again...
    facebook_login(permissions, fb_login_default);  
    global.AskedForLogin=true;  
    alarm[0] = 30; 
    break;   
case "DENIED":                                                      //We have not granted permissions to our facebook app
    if !global.AskedForLogin
        {                                                           //login and ask for permissions if we have not already done so
        facebook_login(permissions, fb_login_default); alarm[0] = 30;      
        global.AskedForLogin = true;                         
        }
    else
        {
        instance_destroy();                                         //Denied, probably because the user as not given permission.
        }
    break;
    
default: alarm[0] = 30;                                             //None of the above options, so repeat the alarm until we have a result
}






</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
