<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == Room_Presentation){
    globalvar best_puntaje, puntaje, vidas, municion, mejora_arma, tiempo, idioma, pausa, congelar;
    
    idioma = "es";
    best_puntaje = 0; // Esta variable almacena el mejor puntaje
    puntaje = 0; // Puntaje normal.
    vidas = 0; // Comprar vidas.
    
    mejora_arma = false; // Booleano de si compro la mejora del arma o no.
    municion = 0; // Cuanta municion tiene del arma mejorada.
    
    tiempo = 0; // Cuantas paradas de tiempo tiene.
    
    pausa = false; //Indica si se está en pausa
    
    congelar = false; //Indica si está utilizando una parada de tiempo
    
    // Cargar Datos.
    if(file_exists(working_directory + "best_score.sav")){
        ini_open(working_directory + "best_score.sav");
        best_puntaje = ini_read_real("best","pass",0);
        ini_close();
    }
    
    // Cargar Idioma.
    if(file_exists(working_directory + "idioma.sav")){
        ini_open(working_directory + "idioma.sav");
        idioma = ini_read_real("idioma","pass",0);
        ini_close();
    }
    
    
    
   // Cargar y Activar los productos.   
   var productList = ds_list_create();
  
   var pVidas = ds_map_create(); 
   ds_map_add(pVidas, "id", "noads");
   ds_map_add(pVidas, "title", "No Ads");
   ds_map_add(pVidas, "type", "Durable");
    
   var pArma = ds_map_create();
   ds_map_add(pArma, "id", "noads");
   ds_map_add(pArma, "title", "No Ads");
   ds_map_add(pArma, "type", "Durable");
   
   var pTiempo = ds_map_create();
   ds_map_add(pTiempo, "id", "noads");
   ds_map_add(pTiempo, "title", "No Ads");
   ds_map_add(pTiempo, "type", "Durable");
      
   ds_list_add(productList, pVidas);
   ds_list_add(productList, pArma);
   ds_list_add(productList, pTiempo);
   iap_activate(productList);
   
   ds_map_destroy(pVidas);
   ds_map_destroy(pArma);
   ds_map_destroy(pTiempo);
   ds_list_destroy(productList);
    
   audio_play_sound(sound_music,1,1);
   alarm[0] = 40;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_generar_peces){
    alarm[0]=30
}
congelar = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>src_trans(Room_Menu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!congelar){
    congelar = true
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == Room_Menu){
    src_trans(Room_Game);
    audio_play_sound(sound_click,1,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == Room_Final){
    if((mouse_y &gt;= 554 and mouse_y &lt;= 785) and mouse_check_button_pressed(mb_left)){
        // Tiempo.
        if(mouse_x &gt;= 199 and mouse_x &lt;= 158){
            var product = "deadfish_tiempo"; comprar = 1;
        // Vidas.
        }else if(mouse_x &gt;= 168 and mouse_x &lt;= 311){
            var product = "deadfish_vidas"; comprar = 1;
        // Arma.
        }else if(mouse_x &gt;= 322 and mouse_x &lt;= 458){
            var product = "deadfish_arma"; comprar = 1;
        }
    }
}

if(comprar){
    audio_play_sound(sound_click,1,0);
    comprar = 0;
    if(iap_status() == iap_status_available){
       iap_acquire(product, ""); // Evento A.
    }else{
       if(idioma == "en"){
          show_message_async("Store is not available.");
       }else if(idioma == "es"){
          show_message_async("La tienda no está disponible.");
       }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var val = ds_map_find_value(iap_data, "type");
switch(val){
   case iap_ev_purchase:
      var map = ds_map_create();
      var purchase_id = ds_map_find_value(iap_data, "index");
      iap_purchase_details(purchase_id, map);
      if(ds_map_find_value(map, "status") == iap_purchased){
          var product_id = ds_map_find_value(map, "product");
          iap_consume(product_id);
      }
      ds_map_destroy(map);
   break;
   case iap_ev_consume:
      var product_id = ds_map_find_value(map, "product");
      if(ds_map_find_value(iap_data, "consumed")){
        switch(product_id){
            case "deadfish_vidas":
                global.vidas += 10; // Aumentar la cantidad de vidas.
            break;
            case "deadfish_tiempo":
                global.tiempo += 10; // Aumentar la cantidad de vidas.
            break;
            case "deadfish_arma":
                global.municion += 200; // Aumentar la cantidad de vidas.
            break;
        }
      }
   break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == Room_Game){
    // Dibujar el Score.
    draw_set_color(c_black);
    draw_set_font(font_juego_35);
    draw_text(room_width/2 - string_width(string(puntaje))/2, 100, string(puntaje));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
